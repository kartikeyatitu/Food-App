[{"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\index.js":"1","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\App.js":"2","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\LAYOUT\\Header.js":"3","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\LAYOUT\\HeaderCartButton.js":"4","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\CartIcon.js":"5","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\Meals.js":"6","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsSummary.js":"7","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\AvailableMeals.js":"8","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Card.js":"9","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsItem\\MealsItem.js":"10","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsItem\\MealItemForm.js":"11","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Input.js":"12","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\Cart.js":"13","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Modal.js":"14","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Store\\Cart-Provider.js":"15","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Store\\cart-context.js":"16","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\CartItem.js":"17","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\Checkout.js":"18"},{"size":142,"mtime":1623247532024,"results":"19","hashOfConfig":"20"},{"size":789,"mtime":1623397156064,"results":"21","hashOfConfig":"20"},{"size":776,"mtime":1623249015898,"results":"22","hashOfConfig":"20"},{"size":1418,"mtime":1623406772356,"results":"23","hashOfConfig":"20"},{"size":523,"mtime":1623247546301,"results":"24","hashOfConfig":"20"},{"size":323,"mtime":1623247517004,"results":"25","hashOfConfig":"20"},{"size":550,"mtime":1623247519624,"results":"26","hashOfConfig":"20"},{"size":1945,"mtime":1624463768775,"results":"27","hashOfConfig":"20"},{"size":186,"mtime":1623247522709,"results":"28","hashOfConfig":"20"},{"size":788,"mtime":1624463216611,"results":"29","hashOfConfig":"20"},{"size":1377,"mtime":1623337181630,"results":"30","hashOfConfig":"20"},{"size":358,"mtime":1623336992493,"results":"31","hashOfConfig":"20"},{"size":1856,"mtime":1624455507853,"results":"32","hashOfConfig":"20"},{"size":771,"mtime":1623249925915,"results":"33","hashOfConfig":"20"},{"size":3612,"mtime":1623405136008,"results":"34","hashOfConfig":"20"},{"size":231,"mtime":1623396908676,"results":"35","hashOfConfig":"20"},{"size":635,"mtime":1623397880223,"results":"36","hashOfConfig":"20"},{"size":1516,"mtime":1624471679286,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"7g1yzw",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\index.js",[],["80","81"],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\App.js",["82"],"//Note Important Point Where we will need the Cart Provider Component ;\n//In this component and on Header Cart Meals  components  \nimport React,{Fragment,useState} from 'react'\nimport Cart from './Components/Cart/Cart';\nimport Header from './Components/LAYOUT/Header'\nimport Meals from './Components/Meals/Meals'\nimport CartProvider from './Store/Cart-Provider';\nfunction App() {\n\n  const [cartIsShown,setCartIsShown]=useState(false);\n  const showCartHandler=()=>{\n\n    setCartIsShown(true);\n  };\n  const hideCartHandler=()=>{\n\n    setCartIsShown(false);\n  };\n  \n  return (\n    \n    <CartProvider>\n    { cartIsShown && <Cart onClose={hideCartHandler}/>}\n     <Header  onShowCart={showCartHandler}/> \n     <main>\n\n<Meals/>\n     </main>\n     </CartProvider>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\LAYOUT\\Header.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\LAYOUT\\HeaderCartButton.js",["83","84"],"import React, { Fragment, useContext,useEffect,useState } from 'react';\r\nimport CartIcon from '../Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport CartContext from '../../Store/cart-context'\r\n//Note now  by using useContext here  the header cart button will be revevaluated  by react whenever chanages and it changes when we update it cart provider component\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [buttonisHighlighted,setbuttonisHighlighted]=useState(false);\r\n    const cartCtx = useContext(CartContext);\r\n    const {items}=cartCtx;\r\n    const numberofCartItems = items.reduce((curNumber, item) => { return curNumber + item.amount }, 0);\r\n   \r\n   const ButtonClasses=`${classes.button} ${buttonisHighlighted?  classes.bump:''} `;\r\n    useEffect(()=>{\r\n   if(cartCtx.items.length===0)\r\n   {\r\n       return;\r\n\r\n   }\r\n        setbuttonisHighlighted(true);\r\n      const timer=setTimeout(()=>  {\r\n\r\n       setbuttonisHighlighted(false);\r\n\r\n      },300)\r\n\r\n        return ()=>{\r\n\r\n    clearTimeout(timer);\r\n\r\n        };\r\n    },[items]);\r\n   return (<button className={ButtonClasses} onClick={props.onClick}>\r\n\r\n        <span className={classes.icon} >\r\n            <CartIcon />\r\n        </span>\r\n        <span>Your Cart</span>\r\n        <span className={classes.badge}>\r\n            {numberofCartItems}\r\n        </span>\r\n\r\n    </button>\r\n    );\r\n\r\n};\r\nexport default HeaderCartButton;","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\CartIcon.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\Meals.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsSummary.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\AvailableMeals.js",["85"],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Card.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsItem\\MealsItem.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Meals\\MealsItem\\MealItemForm.js",["86"],"import React, { useRef,useState } from 'react'\r\n\r\nimport classes from './MealItemForm.module.css'\r\nimport Input from '../../UI/Input'\r\nimport MealItem from './MealsItem'\r\n//const enteredAmount=amountInputRef.current.value; yaha se jobhi value aati hai vo string hoti hai \r\n\r\nconst MealItemForm = (props) => {\r\n\r\n    const amountInputRef = useRef();\r\n    const [amountIsValid,setamountIsValid]=useState(true);\r\n\r\n    const SubmitHandler = (event) => {\r\n    \r\n\r\n        event.preventDefault();\r\n        const enteredAmount = amountInputRef.current.value;\r\n        const enteredAmountNumber = +enteredAmount;\r\n        if(enteredAmount.trim().length === 0 || enteredAmountNumber<1 || enteredAmountNumber>5)\r\n        {\r\n            setamountIsValid(false);\r\n            return;\r\n        }\r\n\r\n        \r\n        \r\n          props.onAddToCart(enteredAmountNumber);\r\n        \r\n    };\r\n\r\n    return <form className={classes.form} onSubmit={SubmitHandler}>\r\n\r\n        <Input label=\"Amount\"    ref= { amountInputRef } input={{\r\n\r\n          \r\n            id: 'amount' + props.id,\r\n            type: \"number\",\r\n            min: \"1\",\r\n            max: \"5\",\r\n            step: \"1\",\r\n            defaultValue: \"1\"\r\n        }} />\r\n        <button>\r\n            +Add\r\n   </button>\r\n   {!amountIsValid && <p>Please Enter a Valid Input</p>}\r\n\r\n\r\n\r\n    </form>\r\n\r\n\r\n\r\n}\r\nexport default MealItemForm;","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Input.js",["87"],"import React ,{forwardRef}from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n\r\n\r\n\r\nconst Input=React.forwardRef((props,ref)=>{\r\n\r\n\r\n    return <div className={classes.input}>\r\n   \r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={ref} {...props.input}/>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Input;","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\Cart.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\UI\\Modal.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Store\\Cart-Provider.js",["88"],"// The goal of this context is to manage the Cart Context data and provide that data to all  components that want acess to it\r\nimport React, { useReducer } from 'react';\r\nimport CartContext from './cart-context'\r\n//Card Reducer doesnot need anything from the component and should not be reacreated everytime so outside of the component\r\n//concat add new items to array but doent update the existing array creates a new array\r\nconst defaultCartState = {\r\n\r\n    items: [],\r\n    totalAmount: 0,\r\n};\r\nconst CartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        //const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCardItemsIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCardItem = state.items[existingCardItemsIndex];\r\n       \r\n    \r\n        let updatedItems;\r\n        if(existingCardItem)\r\n        { \r\n      \r\n            \r\n          const   updatedItem={\r\n\r\n                ...existingCardItem,\r\n                amount:existingCardItem.amount+action.item.amount\r\n            }\r\n                updatedItems=[...state.items];\r\n                updatedItems[existingCardItemsIndex]=updatedItem;\r\n        }else\r\n        {\r\n\r\n             updatedItems = state.items.concat(action.item)\r\n        }\r\n\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n\r\n        };\r\n    };\r\n    \r\n    if(action.type===\"REMOVE\")\r\n    {\r\n       \r\n        const existingCardItemsIndex = state.items.findIndex(item => item.id === action.id);\r\n        const existingItem=state.items[existingCardItemsIndex];\r\n        const updatedTotalAmount=state.totalAmount-existingItem.price;\r\n        let updatedItems;\r\n        if(existingItem.amount === 1)\r\n        {\r\n            //remove entire item filter is an builtin method which returns a new aaray\r\n         updatedItems=state.items.filter(item=> item.id!=action.id);\r\n\r\n        }\r\n        else\r\n        {\r\n            //keep item and decreaser amount and price\r\n\r\n              const updatedItem={...existingItem,amount:existingItem.amount-1};\r\n              updatedItems=[...state.items]\r\n              updatedItems[existingCardItemsIndex]=updatedItem;\r\n\r\n\r\n\r\n        }\r\n        return{\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultCartState;\r\n}\r\n\r\n\r\nconst CartProvider = (props) => {\r\n    //This here will be the concrete value context though which will be updated also and the wholw logic will reside here\r\n    //Now with that we can use this cartProvider for all the elements which need access to the Carts\r\n    //dispatch funciton has some property which allow us to identify what type of action is used here\r\n    const [cartstate, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\r\n    const addItemAddHandler = item => {\r\n\r\n        dispatchCartAction({\r\n\r\n            type: 'ADD',\r\n            item: item,\r\n\r\n\r\n        })\r\n\r\n    };\r\n\r\n    const removeItemHandler = id => {\r\n\r\n        dispatchCartAction({\r\n\r\n            type: 'REMOVE',\r\n            id: id,\r\n\r\n\r\n        })\r\n\r\n\r\n    };\r\n    const cartContext = {\r\n\r\n        items: cartstate.items,\r\n        totalAmount: cartstate.totalAmount,\r\n        addItem: addItemAddHandler,\r\n        removeItem: removeItemHandler\r\n\r\n    }\r\n    return <CartContext.Provider value={cartContext}>\r\n\r\n        {props.children}\r\n\r\n    </CartContext.Provider>\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default CartProvider;","C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Store\\cart-context.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\CartItem.js",[],"C:\\Users\\Kartikeya\\Desktop\\Food delivery React\\01-starting-project\\src\\Components\\Cart\\Checkout.js",["89","90","91","92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":15,"nodeType":"101","messageId":"102","endLine":3,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":32,"column":7,"nodeType":"105","endLine":32,"endColumn":14,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":54,"column":16,"nodeType":"109","messageId":"110","endLine":54,"endColumn":18},{"ruleId":"99","severity":1,"message":"111","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"113","line":55,"column":56,"nodeType":"109","messageId":"110","endLine":55,"endColumn":58},{"ruleId":"99","severity":1,"message":"114","line":3,"column":7,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"115","line":4,"column":7,"nodeType":"101","messageId":"102","endLine":4,"endColumn":26},{"ruleId":"99","severity":1,"message":"116","line":15,"column":11,"nodeType":"101","messageId":"102","endLine":15,"endColumn":22},{"ruleId":"99","severity":1,"message":"117","line":16,"column":11,"nodeType":"101","messageId":"102","endLine":16,"endColumn":24},{"ruleId":"99","severity":1,"message":"118","line":17,"column":11,"nodeType":"101","messageId":"102","endLine":17,"endColumn":28},{"ruleId":"99","severity":1,"message":"119","line":18,"column":11,"nodeType":"101","messageId":"102","endLine":18,"endColumn":22},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartCtx.items.length'. Either include it or remove the dependency array.","ArrayExpression",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MealItem' is defined but never used.","'forwardRef' is defined but never used.","Expected '!==' and instead saw '!='.","'isEmpty' is assigned a value but never used.","'isNotFiveCharacters' is assigned a value but never used.","'enteredName' is assigned a value but never used.","'enteredStreet' is assigned a value but never used.","'enteredPostalCode' is assigned a value but never used.","'enteredCity' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [cartCtx.items.length, items]",{"range":"125","text":"126"},[1062,1069],"[cartCtx.items.length, items]"]